import React, { useState, useEffect } from "react";
import "./Style.css";
import { Link, useNavigate } from "react-router-dom";

const Todo = () => {
  const navigate = useNavigate();
  const [todos, setTodos] = useState(() => {
    // localStorage –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ 
    const storedTodos = localStorage.getItem("todos");
    return storedTodos ? JSON.parse(storedTodos) : [];
  }); // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç —Ç–æ –æ–Ω –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–µ—Ç –ø—É—Ç–æ–π –º–∞—Å—Å–∏–≤
  const [inputValue, setInputValue] = useState("");

  function handleInputChange(event) {
    setInputValue(event.target.value);
  } //input –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –≤ —Å–ø–∏—Å–æ–∫

  function handleAddTodo() {
    if (inputValue) {
      setTodos([
        ...todos,
        {
          text: inputValue,
          id: Math.random().toString(36).substring(7),
          checked: false // –¥–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ checked —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º false
        },
      ]);
      setInputValue("");
    }
  }

  function handleDelete(index) {
    const newTodos = [...todos];
    newTodos.splice(index, 1);
    setTodos(newTodos);
  } //–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ 

  function handleCheckboxClick(index) {
    const newTodos = [...todos];
    newTodos[index].checked = !newTodos[index].checked;
    setTodos(newTodos);
  } // –ì–∞–ª–æ—á–∫–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏ —Ä–∞–∑–∂–∞—Ç–∏–µ –µ—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫ –º–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å 

  function handleExit() {
    navigate("/");
  } //–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–æ—É—Ç–µ—Ä—É 

  useEffect(() => {
    localStorage.setItem("todos", JSON.stringify(todos));
  }, [todos]);
  // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–ø–∏—Å–∫–∞ todos —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ localStorage

  return (
    <div>
      <div className="main_window2">
        <div className="flex">
          <img className="img_1" src="./public/Ellipse 1.svg" />
          <div className="text_img">
            <p className="salem">
              –°”ô–ª–µ–º, –ú–∏–∫–æ üëãüèΩ
              <br />
              <span className="tapsyrma">{todos.length} —Ç–∞–ø—Å—ã—Ä–º–∞ –±–∞—Ä</span>
            </p>
          </div>
        </div>
        <div>
          <p className="big_text2">ZhaSa</p>
        </div>
        <div>
          <button className="shygu" onClick={handleExit}>
            –®—ã“ì—É
          </button>
        </div>
      </div>
      <div className="tapsyrma_kosu">
        <div>
          <p className="winfow3_text">–ñ–∞“£–∞ —Ç–∞–ø—Å—ã—Ä–º–∞</p>
        </div>
        <div>
          <input
            className="input_style"
            type="text"
            placeholder="–¢–∞“õ—ã—Ä—ã–ø"
            value={inputValue}
            onChange={handleInputChange}
          />{" "}
          <button className="kettik" onClick={handleAddTodo}>
            “ö–æ—Å—É
          </button>
          <br />
        </div>
      </div>
      <ul>
        {todos.map((todo, index) => (
          <div key={todo.id} className="todo-item">
            <input type="checkbox" className="size_blok" />
            <p className="redactor">{todo.text}</p>
            <button onClick={() => handleDelete(index)}>–£–¥–∞–ª–∏—Ç—å</button>
          </div>
        ))}
      </ul>
    </div>
  );
};

export default Todo;